{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemsPerPage","currentPage","pageChange","pagesCount","Math","ceil","pages","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","page","active","handlePageChange","items","App","useState","setCurrentPage","setItemsPerPage","totalItems","length","firstDisplayItem","lastDisplayItem","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,WAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAoBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAChB,CAAEC,SAAUJ,IADd,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QA5BR,WACON,GACHL,EAAWD,EAAc,IAqBvB,oBAUDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAG,YACZ,CAAEM,OAAQD,IAASd,IAHvB,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA/BnB,SAA0BE,GACpBA,IAASd,GACXC,EAAWa,GA6BUE,CAAiBF,IAJlC,SAMGA,KAVEA,MAcT,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUH,IADd,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAnDR,WACOL,GACHN,EAAWD,EAAc,IA4CvB,wBCpEFiB,EAAQ1B,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPuB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOpB,EAAP,KAAqBsB,EAArB,KAEMC,EAAaL,EAAMM,OACnBC,GAAoBxB,EAAc,GAAKD,EACvC0B,EAAkBzB,EAAcD,EAAeuB,EACjDA,EACAtB,EAAcD,EAEZ2B,EAAeT,EAAMU,MAAMH,EAAkBC,GASnD,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCwB,EAAmB,EADpD,cAC2DC,EAD3D,eACiFH,EADjF,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SAtBiB,SAACC,GAC1B,IAAQF,EAAUE,EAAMC,OAAhBH,MAERR,GAAiBQ,GACjBT,EAAe,IAaT,UAOE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOwB,EACPvB,aAAcA,EACdC,YAAaA,EACbC,WAAY,SAAAa,GAAI,OAAIM,EAAeN,MAErC,6BACGY,EAAab,KAAI,SAAAqB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5D1DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ac36a05.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  pageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  pageChange,\n}) => {\n  const pagesCount = Math.ceil(total / itemsPerPage);\n  const pages = getNumbers(1, pagesCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pagesCount;\n\n  function handlePrevPage() {\n    if (!isFirstPage) {\n      pageChange(currentPage - 1);\n    }\n  }\n\n  function handleNextPage() {\n    if (!isLastPage) {\n      pageChange(currentPage + 1);\n    }\n  }\n\n  function handlePageChange(page: number) {\n    if (page !== currentPage) {\n      pageChange(page);\n    }\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item',\n        { disabled: isFirstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item',\n            { active: page === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn('page-item',\n        { disabled: isLastPage })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const totalItems = items.length;\n  const firstDisplayItem = (currentPage - 1) * itemsPerPage;\n  const lastDisplayItem = currentPage * itemsPerPage > totalItems\n    ? totalItems\n    : currentPage * itemsPerPage;\n\n  const visibleItems = items.slice(firstDisplayItem, lastDisplayItem);\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setItemsPerPage(+value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstDisplayItem + 1} - ${lastDisplayItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        itemsPerPage={itemsPerPage}\n        currentPage={currentPage}\n        pageChange={page => setCurrentPage(page)}\n      />\n      <ul>\n        {visibleItems.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}